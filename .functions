# open the file with vim at the bottom of the file
vimend () {
    vim '+normal Go' $1
}

mkcd () {
  mkdir "$1"
  cd "$1"
}

# plugin taken from oh-my-zsh for easy extraction
extract() {
	local remove_archive
	local success
	local extract_dir

	if (( $# == 0 )); then
		cat <<-'EOF' >&2
			Usage: extract [-option] [file ...]
			Options:
			    -r, --remove    Remove archive.
		EOF
	fi

	remove_archive=1
	if [[ "$1" == "-r" ]] || [[ "$1" == "--remove" ]]; then
		remove_archive=0
		shift
	fi

	while (( $# > 0 )); do
		if [[ ! -f "$1" ]]; then
			echo "extract: '$1' is not a valid file" >&2
			shift
			continue
		fi

		success=0
		extract_dir="${1:t:r}"
		case "$1" in
			(*.tar.gz|*.tgz) (( $+commands[pigz] )) && { pigz -dc "$1" | tar xv } || tar zxvf "$1" ;;
			(*.tar.bz2|*.tbz|*.tbz2) tar xvjf "$1" ;;
			(*.tar.xz|*.txz)
				tar --xz --help &> /dev/null \
				&& tar --xz -xvf "$1" \
				|| xzcat "$1" | tar xvf - ;;
			(*.tar.zma|*.tlz)
				tar --lzma --help &> /dev/null \
				&& tar --lzma -xvf "$1" \
				|| lzcat "$1" | tar xvf - ;;
			(*.tar) tar xvf "$1" ;;
			(*.gz) (( $+commands[pigz] )) && pigz -d "$1" || gunzip "$1" ;;
			(*.bz2) bunzip2 "$1" ;;
			(*.xz) unxz "$1" ;;
			(*.lzma) unlzma "$1" ;;
			(*.Z) uncompress "$1" ;;
			(*.zip|*.war|*.jar|*.sublime-package|*.ipsw|*.xpi|*.apk) unzip "$1" -d $extract_dir ;;
			(*.rar) unrar x -ad "$1" ;;
			(*.7z) 7za x "$1" ;;
			(*.deb)
				mkdir -p "$extract_dir/control"
				mkdir -p "$extract_dir/data"
				cd "$extract_dir"; ar vx "../${1}" > /dev/null
				cd control; tar xzvf ../control.tar.gz
				cd ../data; extract ../data.tar.*
				cd ..; rm *.tar.* debian-binary
				cd ..
			;;
			(*)
				echo "extract: '$1' cannot be extracted" >&2
				success=1
			;;
		esac

		(( success = $success > 0 ? $success : $? ))
		(( $success == 0 )) && (( $remove_archive == 0 )) && rm "$1"
		shift
	done
}

# usage: debugnodefile <path to node file>
debugnodefile () {
    node --inspect=9229 --debug-brk "$1" 28688 1
}

# requires ghostscript
# usage: compresspdf <pdf filename>
function compresspdf() {
	if [ -z "$1" ] ; then
	        echo 'Usage: compresspdf <pdf filename>'
        	return
   	fi
	gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile="small $1" "$1"
}

function findfilename() {
	if [ -z "$1" ] ; then
	        echo 'Usage: f <exact file name>'
        	return
        fi
	find . -iname "$1" 2>&1 | grep -v 'Permission denied'
}

# requires: ffmpg, youtube-dl
# with zsh, you need to manually put quotes around the URL
# Usage: youtubemp3 "<url>"
function youtubemp3() {
	if [ -z "$1" ] ; then
		echo 'Usage: youtubemp3 <url>'
		return
	fi
	youtube-dl --extract-audio --prefer-ffmpeg --audio-format mp3 "$1"
}

# usage: resetmongo <backupdb> <maindb>
function resetmongo() {
    if [ -z "$1" ] || [  -z "$2" ] ; then
        echo 'Usage: resetmongo <backupdb> <maindb>'
        return
    fi
    
    backupdb="$1"
    maindb="$2"

    mongo "$maindb" --eval "db.dropDatabase()"
    mongo "$backupdb" --eval "db.copyDatabase(\"$backupdb\", \"$maindb\")"
}

# shortcuts for ubuntu installation
# the install command already exists
function inst() {
	"sudo apt-get install $1"
}
function remv() {
	"sudo apt-get remove $1"
}